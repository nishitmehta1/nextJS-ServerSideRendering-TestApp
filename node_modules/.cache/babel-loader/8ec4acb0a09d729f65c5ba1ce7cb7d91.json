{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Nishit\\\\Udemy\\\\next-ssr\\\\pages\\\\Robots.js\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Home\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Robots Data\"));\n};\n\nRobots.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/posts?users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;","map":{"version":3,"sources":["D:\\Nishit\\Udemy\\next-ssr\\pages\\Robots.js"],"names":["Link","fetch","Robots","getInitialProps","res","json","data"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACpB,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJD,CADD;AAQA,CATD;;AAWAA,MAAM,CAACC,eAAP;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNF,KAAK,CAAC,kDAAD,CADC;;AAAA;AAClBG,UAAAA,GADkB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBC,UAAAA,IAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAMA,eAAeJ,MAAf","sourcesContent":["import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Robots = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Link href='/'>\r\n\t\t\t\t<button>Home</button>\r\n\t\t\t</Link>\r\n\t\t\t<div>Robots Data</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nRobots.getInitialProps = async function(){\r\n\tconst res = await fetch('https://jsonplaceholder.typicode.com/posts?users')\r\n\tconst data = await res.json()\r\n}\r\n\r\n\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}